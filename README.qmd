---
title: "Ideal Point Estimation with 99% Missing Data"
format: 
  gfm:
    fig-dpi: 300
execute: 
  echo: false
  message: false
  warning: false
---

```{r}
pacman::p_load(
  "targets",
  "dplyr",
  "ggplot2",
  "ggdist",
  "MetBrewer",
  "qreport"
)
```

Item-Response Theory (IRT) models are frequently used in political science to estimate the latent ideology, or ideal point, of various political actors (most commonly legislators). The model takes observed actions (such as votes on bills) as inputs, and then outputs a posterior distribution for where each actor's ideal point lands on a left-right scale. The traditional IRT model formulation is shown in @eq-irt.

$$
\begin{aligned}
  \text{Pr}(y_{ij} = \text{Support}) &= \Phi(\gamma_j\theta_i + \xi_j)
\end{aligned}
$$ {#eq-irt}

Where

- $y_{ij}$: actor $i$'s vote (support/oppose) on bill $j$
- $\theta_i$: the actor's ideal point
- $\gamma_j$: the ideological component of the bill
- $\xi_j$: the non-ideological component of the bill

```{r}
#| label: fig-irt
#| fig-cap: "Traditional IRT Model"
#| fig-height: 4
tau_plus <- .7
tau_minus <- -2
tau_mid <- (tau_plus + tau_minus) / 2

plot_labs <- tibble(x = c(tau_mid, 0),
                    y = c(-.02, .03),
                    label = c("0", "gamma[j] * theta[i] + xi[j]"))
tibble(z = seq(from = -3.75, to = 3.75, length.out = 1e3)) %>% 
  mutate(d = dnorm(x = z, mean = 0, sd = 1)) %>% 
  ggplot(aes(x = z, y = d)) +
  geom_line(color = "black") +
  geom_area(aes(fill = z <= tau_mid), alpha = 1/4) +
  geom_segment(x = tau_mid, xend = tau_mid, y = 0, yend = dnorm(tau_mid), linetype = 3)+
  geom_segment(x = tau_mid, xend = tau_mid, y = 0, yend = .01) +
  geom_segment(x = 0, xend = 0, y = 0, yend = .01) +
  annotate("text", x = plot_labs$x, y = plot_labs$y, label = parse(text = plot_labs$label),
           size = 4, family = "serif") +
  annotate("text", x = 2.7, y = dnorm(1), 
           label = parse(text = "Pr(y[ij] == Support)"),
           size = 4, family = "serif") +
  geom_curve(aes(x = 2.7, y = dnorm(1.1),
             xend = 1, yend = .1),
             arrow = arrow(length = unit(.02, "npc")), curvature = -.25) +
  annotate("text", x = -2.7, y = dnorm(-1.5), 
           label = parse(text = "Pr(y[ij] == Oppose)"),
           size = 4, family = "serif") +
  geom_curve(aes(x = -2.7, y = dnorm(-1.6),
             xend = -1.6, yend = .05),
             arrow = arrow(length = unit(.02, "npc")), curvature = .25) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(NULL, breaks = NULL, name = parse(text = "y[ij]")) +
  scale_y_continuous(NULL, breaks = NULL) +
  coord_cartesian(xlim = c(-3.25, 3.25)) +
  scale_fill_manual(values = met.brewer("Isfahan1", n = 2),
                    breaks = NULL) +
  theme_ggdist() +
  theme(axis.line.y.left = element_blank(),
        panel.background = element_rect(fill = "transparent",colour = NA),
        plot.background = element_rect(fill = "transparent",colour = NA))
```

@fig-irt shows the probabilistic representation of @eq-irt using the standard normal CDF link, $\Phi$. 

## Accounting for Abstentions

Some tricky model identification issues aside, the traditional IRT model does a pretty good job recovering ideal points when most actors vote on most bills. But if there is a high rate of abstentions (e.g. missing data), things start to fall apart. 

In my [dissertation paper](https://github.com/bwilden/abstention-ideal/blob/main/paper.pdf) for this project I develop a new IRT model to account for high rates of missing data. The new model is essentially an ordered-probit with an extra parameter, $\tau_i$ for each actor which represents their "indifference" towards taking support/oppose positions (@eq-irt-tau and @fig-irt-abs).

$$
\begin{aligned}
   \text{Pr}(y_{ij} = \text{Support}) &= \Phi(\gamma_j\theta_i + \xi_j - \tau_i) \\
   \text{Pr}(y_{ij} = \text{Abstain}) &= \Phi(\tau_i - (\gamma_j\theta_i + \xi_j)) - \Phi(-\tau_i - (\gamma_j\theta_i + \xi_j)) \\
   \text{Pr}(y_{ij} = \text{Oppose}) &= 1 - \Phi(\gamma_j\theta_i + \xi_j + \tau_i) 
\end{aligned}
$$ {#eq-irt-tau}


```{r}
#| label: fig-irt-abs
#| fig-cap: "Abstention IRT Model"
#| fig-height: 4
plot_labs <- tibble(x = c(tau_minus, tau_mid, 0, tau_plus),
                    y = c(-.02, -.02, .03, -.02),
                    label = c("-tau[i]", "0", "gamma[j] * theta[i] + xi[j]", "tau[i]"))
tibble(z = seq(from = -3.75, to = 3.75, length.out = 1e3)) %>% 
  mutate(d = dnorm(x = z, mean = 0, sd = 1)) %>% 
  ggplot(aes(x = z, y = d)) +
  geom_line(color = "black") +
  geom_area(aes(x = z, y = ifelse(z <= tau_minus, d, 0)), fill = "#178f92", alpha = 1/4) +
  geom_area(aes(x = z, y = ifelse(z > tau_minus & z <= tau_plus, d, 0)), fill = "transparent", alpha = 1/4) +
  geom_area(aes(x = z, y = ifelse(z > tau_plus, d, 0)), fill = "#845d29", alpha = 1/4) +
  geom_segment(x = tau_plus, xend = tau_plus, y = 0, yend = dnorm(tau_plus), linetype = 3) +
  geom_segment(x = tau_minus, xend = tau_minus, y = 0, yend = dnorm(tau_minus), 
               linetype = 3) +
  geom_segment(x = tau_plus, xend = tau_plus, y = 0, yend = .01) +
  geom_segment(x = tau_minus, xend = tau_minus, y = 0, yend = .01) +
  geom_segment(x = tau_mid, xend = tau_mid, y = 0, yend = .01) +
  geom_segment(x = 0, xend = 0, y = 0, yend = .01) +
  annotate("text", x = plot_labs$x, y = plot_labs$y, label = parse(text = plot_labs$label),
           size = 4, family = "serif") +
  annotate("text", x = tau_plus + 2, y = dnorm(tau_plus + .5), 
           label = parse(text = "Pr(y[ij] == Support)"),
           size = 4, family = "serif") +
  geom_curve(aes(x = tau_plus + 1.9, y = dnorm(tau_plus + .6),
             xend = tau_plus + 1.1, yend = dnorm(tau_plus + 1.5)),
             arrow = arrow(length = unit(.02, "npc")), curvature = -.25) +
  annotate("text", x = tau_minus - .7, y = dnorm(tau_minus + .5), 
           label = parse(text = "Pr(y[ij] == Oppose)"),
           size = 4, family = "serif") +
  geom_curve(aes(x = tau_minus - .7, y = dnorm(tau_minus + .4),
             xend = tau_minus - .5, yend = dnorm(tau_minus - .8)),
             arrow = arrow(length = unit(.02, "npc")), curvature = .25) +
  annotate("text", x = tau_mid - 1, y = dnorm(tau_mid - .2), 
           label = parse(text = "Pr(y[ij] == Abstain)"),
           size = 4, family = "serif") +
  geom_curve(aes(x = tau_mid - 1, y = dnorm(tau_mid - .3),
             xend = tau_mid - .4, yend = dnorm(tau_mid) / 2),
             arrow = arrow(length = unit(.02, "npc")), curvature = .25) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(NULL, breaks = NULL, name = parse(text = "y[ij]")) +
  scale_y_continuous(NULL, breaks = NULL) +
  coord_cartesian(xlim = c(-3.25, 3.25)) +
  theme_ggdist() +
  theme(axis.line.y.left = element_blank(),
        panel.background = element_rect(fill = "transparent",colour = NA),
        plot.background = element_rect(fill = "transparent",colour = NA))
```

Larger values of $\tau$ implies a higher likelihood that an actor will abstain on any particular bill.

I code this model in the Bayesian modeling package [brms](https://paulbuerkner.com/brms/) in R using actor-specific thresholds. The $\theta$, $\gamma$, and $\xi$ parameters are all modeled hierarchically using the `(1 | id)` syntax from brms.

```{r}
#| eval: false
#| echo: true
abstention_formula <- bf(
  position | thres(gr = actor_id) ~ gamma * theta + xi,
  theta ~ (1 | actor_id),
  gamma ~ (1 | bill_id),
  xi ~ (1 | bill_id),
  nl = TRUE
)
abstention_family <- brmsfamily("cumulative", "probit")
```

## Simulation Study

```{r}
tar_load(sim_ord_comparison_plots)
```

I simulate data with increasing amounts of missingness (i.e. abstentions) to test how well each IRT model recovers the true parameter values. By comparing the true ideal point values on the x-axis with the estimated ideal point values on the y-axis we can see that under low-to-moderate amounts of missingness, both the Abstention model and the traditional IRT models do a decent job. However, at about 90% missing data and above, the traditional model fails to accurately recover the simulated ideal points---whereas the Abstention model's predictions remain relatively close to the 45 degree identity line.[^1] 

```{r}
#| results: "asis"
names(sim_ord_comparison_plots) <- c(18.9, 46.3, 74.0, 90.2, 96.2) |> 
  paste0("% Missing Data")

maketabs(sim_ord_comparison_plots)
```


## Notes

- Full paper: [paper.pdf](https://github.com/bwilden/abstention-ideal/blob/main/paper.pdf)
- R code and cleaning steps: [_targets.R](https://github.com/bwilden/abstention-ideal/blob/main/_targets.R) and [R files](https://github.com/bwilden/abstention-ideal/tree/main/R)

[^1]: The *99%* in the project title comes from an application where I test my model against federal interest group lobbying data, which has an abstention rate of around 99.9%. See the full paper for more details.
